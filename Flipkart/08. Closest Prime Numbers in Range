//  https://leetcode.com/problems/closest-prime-numbers-in-range/description/


class Solution {
    int n = (int)1e6+2;
    boolean[] prime;
    public Solution(){
        prime = new boolean[n];
        Arrays.fill(prime, true);
        prime[0] = prime[1] = false;
        for(int i=2; i<n; i++){
            if(prime[i]==true){
                for(long j=(long)i*i; j<n; j+=i)
                    prime[(int)j] = false;
            }
        }
    }
    public int[] closestPrimes(int left, int right) {
        List<Integer> list = new ArrayList<>();
        for(int i=left; i<=right; i++){
            if(prime[i])
                list.add(i);
        }
        int[] ans = new int[]{-1,-1};
        if(list.size()<2)
            return ans;
        int diff = Integer.MAX_VALUE;
        int idx = 1;
        for(int i=list.size()-1; i>=1; i--){
            if(list.get(i)-list.get(i-1) <= diff){
                diff = list.get(i)-list.get(i-1);
                idx = i;
            }
        }
        ans[1] = list.get(idx);
        ans[0] = list.get(idx-1);
        return ans;
    }
}