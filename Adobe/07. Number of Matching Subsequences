//  https://leetcode.com/problems/number-of-matching-subsequences/


class Solution {
    public int numMatchingSubseq(String s, String[] words) {
        ArrayList<Integer>[] list = new ArrayList[26];
        for(int i=0; i<26; i++)
            list[i] = new ArrayList<>();
        int n = s.length();
        for(int i=0; i<n; i++){
            list[s.charAt(i)-'a'].add(i);
        }
        int ans = 0;
        outer:
        for(String st:words){
            int prev = -2;
            for(int i=0; i<st.length(); i++){
                char ch = st.charAt(i);
                int pos = Collections.binarySearch(list[ch-'a'], prev+1);
                if(pos<0)
                    pos = -pos - 1;
                if(pos==list[ch-'a'].size())
                    continue outer;
                else
                    prev = list[ch-'a'].get(pos);
            }
            ans++;
        }
        return ans;
    }
}