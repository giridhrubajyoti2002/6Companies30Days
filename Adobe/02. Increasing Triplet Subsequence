//   https://leetcode.com/problems/increasing-triplet-subsequence/description/


class Solution {
    public boolean increasingTriplet(int[] nums) {
       int max1 = Integer.MAX_VALUE;
       int max2 = Integer.MAX_VALUE;
       for(int n : nums) {
           if(n <= max1) max1 = n;
           else if(n <= max2) max2 = n;
           else return true;
       }
       return false;
    }
}


// Another solution
class Solution {
    public boolean increasingTriplet(int[] nums) {
        int n = nums.length;
        int[] prefixMin = new int[n];
        int[] suffixMax = new int[n];
        prefixMin[0] = nums[0];
        suffixMax[n-1] = nums[n-1];
        for(int i=1; i<n; i++){
            prefixMin[i] = Math.min(prefixMin[i-1], nums[i]);
            suffixMax[n-1-i] = Math.max(suffixMax[n-1-i+1], nums[n-1-i]);
        }
        for(int i=0; i<n; i++){
            if(prefixMin[i]!=nums[i] && suffixMax[i]!=nums[i])
                return true;
        }
        return false;
    }
}